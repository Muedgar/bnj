.box {
    --box-size: 50px;
    width: var(--box-size);
    height: var(--box-size);
    margin: 50px auto;
    background-color: transparent;
    perspective: 80em;
    overflow: hidden;
    position: relative;
}

.box *:not(:empty) {
    transform-style: preserve-3d;
}

.positioning {
    position: relative;
    z-index: 1;
}

.faces {
    --facesize: 25px;
    position: absolute;
    top: var(--facesize);
    left: 26%;
    margin: auto;
    width: var(--facesize);
    height: var(--facesize);
    background-color: black;
    z-index: 10;
    transform: rotateX(70deg) rotateZ(150deg);
    transform-style: preserve-3d; /* Preserve 3D space */
    animation: rotateBox 7s linear infinite;
}

@keyframes rotateBox {
    0% {
        transform: rotateX(70deg) rotateZ(0deg);
    }
    100% {
        transform: rotateX(70deg) rotateZ(360deg);
    }
}

.face {
    width: 100%;
    height: 100%;
    position: absolute;
    box-shadow: inset 1px 1px 1px 1px rgba(0, 0, 0, 0.098);
}

.top {
    background-color: rgb(130, 13, 13);
    transform: translateZ(var(--facesize)); /* Rotate and push up */
}

.one {
    background-color: rgb(130, 13, 13);
    transform: rotateY(90deg) translateX(calc(var(--facesize)/-2)) translateZ(calc(var(--facesize)/-2));
}

.two {
    background-color: rgb(130, 13, 13);
    transform: rotateY(90deg) translateX(calc(var(--facesize)/-2)) translateZ(calc(var(--facesize)/2));
}

.three {
    background-color: rgb(130, 13, 13);
    transform: rotateY(90deg) translateX(calc(var(--facesize)/-2)) rotateX(90deg) translateZ(calc(var(--facesize)/-2));
}

.four {
    background-color:rgb(130, 13, 13);
    transform: rotateY(90deg) translateX(calc(var(--facesize)/-2)) rotateX(90deg) translateZ(calc(var(--facesize)/2));
}